import { useState } from "react";
import { FarmCard } from "./FarmCard";
import { FarmButton } from "./FarmButton";
import { AnimatedIcon } from "./AnimatedIcon";
import { X, Sprout, Heart, Droplets, Flower, Play } from "lucide-react";

interface ActionPopupProps {
  type: "crops" | "animals" | "water" | "fertilizer";
  isOpen: boolean;
  onClose: () => void;
}

export const ActionPopup = ({ type, isOpen, onClose }: ActionPopupProps) => {
  const [actionInProgress, setActionInProgress] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);
  const [showVideo, setShowVideo] = useState(false);
  const [videoId, setVideoId] = useState("");

  if (!isOpen) return null;

  const handleAction = async (action: string) => {
    // Special case for Plant Seeds to show video
    if (action === "Plant Seeds") {
      setVideoId("COZkBrGu2tY");
      setShowVideo(true);
      return;
    }
    
    setActionInProgress(true);
    
    // Simulate action with delay
    await new Promise(resolve => setTimeout(resolve, 1500));
    
    setActionInProgress(false);
    setShowSuccess(true);
    
    // Add points or update game state here
    
    // Show success message for longer
    setTimeout(() => {
      setShowSuccess(false);
      // Delay the close slightly to allow animation to complete
      setTimeout(onClose, 300);
    }, 3000);
  };

  const handleVideoEnd = () => {
    setShowVideo(false);
    setActionInProgress(true);
    
    // Continue with normal action flow after video ends
    setTimeout(() => {
      setActionInProgress(false);
      setShowSuccess(true);
      
      setTimeout(() => {
        setShowSuccess(false);
        setTimeout(onClose, 300);
      }, 3000);
    }, 1500);
  };

  const getPopupContent = () => {
    switch (type) {
      case "crops":
        return {
          title: "🌱 Crop Management",
          color: "text-green",
          actions: [
            { name: "Plant Seeds", emoji: "🌰", description: "Plant new crops in empty plots", color: "green" },
            { name: "Water Crops", emoji: "💧", description: "Give your plants fresh water", color: "primary" },
            { name: "Harvest", emoji: "🌾", description: "Collect your fully grown crops", color: "yellow" }
          ]
        };
      case "animals":
        return {
          title: "🐄 Animal Care",
          color: "text-orange",
          actions: [
            { name: "Feed Animals", emoji: "🌾", description: "Give nutritious food to your animals", color: "yellow" },
            { name: "Health Check", emoji: "🩺", description: "Make sure all animals are healthy", color: "green" },
            { name: "Clean Barn", emoji: "🧹", description: "Keep the living space clean", color: "primary" }
          ]
        };
      case "water":
        return {
          title: "💧 Irrigation System",
          color: "text-primary",
          actions: [
            { name: "Turn On Sprinklers", emoji: "🚿", description: "Activate automatic watering", color: "primary" },
            { name: "Check Water Levels", emoji: "📊", description: "Monitor water storage tanks", color: "green" },
            { name: "Repair Pipes", emoji: "🔧", description: "Fix any broken irrigation pipes", color: "orange" }
          ]
        };
      case "fertilizer":
        return {
          title: "🌼 Fertilizer Management",
          color: "text-yellow",
          actions: [
            { name: "Apply Organic Fertilizer", emoji: "🍃", description: "Use natural compost for plants", color: "green" },
            { name: "Test Soil pH", emoji: "🧪", description: "Check if soil needs nutrients", color: "purple" },
            { name: "Spread Compost", emoji: "🗑️", description: "Add nutrient-rich compost", color: "yellow" }
          ]
        };
    }
  };

  const content = getPopupContent();

  // Full screen video view
  if (showVideo) {
    return (
      <div className="fixed inset-0 bg-black/90 flex items-center justify-center z-50 p-0">
        <div className="w-full max-w-5xl">
          {/* Close button */}
          <button
            onClick={() => setShowVideo(false)}
            className="absolute top-4 right-4 p-3 bg-white/20 hover:bg-white/30 rounded-full transition-colors z-10"
          >
            <X size={24} className="text-white" />
          </button>
          
          {/* YouTube Video - Full size */}
          <div>
            <div className="aspect-video rounded-lg overflow-hidden bg-black relative w-full">
              <iframe
                className="absolute top-0 left-0 w-full h-full"
                src={`https://www.youtube.com/embed/${videoId}?autoplay=1&enablejsapi=1&rel=0&modestbranding=1`}
                title="How to Plant Seeds"
                frameBorder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowFullScreen
              ></iframe>
            </div>
            <div className="mt-6 text-center bg-black/30 p-6 rounded-xl backdrop-blur-sm">
              <h3 className="text-xl font-bold mb-2 text-white">Let's Learn About Planting!</h3>
              <p className="text-white/80 mb-6">Watch this video to learn how to plant seeds properly!</p>
              <FarmButton 
                variant="green" 
                onClick={handleVideoEnd}
                className="mx-auto px-8 py-3 text-lg"
              >
                <Play className="mr-2" size={20} /> I've Finished Watching
              </FarmButton>
            </div>
          </div>
        </div>
      </div>
    );
  }
  
  // Standard action popup
  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      <FarmCard className="w-full max-w-md relative bounce-in">
        {/* Close button */}
        <button
          onClick={onClose}
          className="absolute top-4 right-4 p-2 hover:bg-muted rounded-full transition-colors z-10"
        >
          <X size={20} />
        </button>

        {/* Header */}
        <div className="text-center mb-6">
          <h2 className={`text-2xl font-kids font-bold ${content.color} mb-2`}>
            {content.title}
          </h2>
          <p className="text-sm font-comic text-muted-foreground">
            Choose an action to improve your farm!
          </p>
        </div>

        {/* Success Message */}
        {showSuccess && (
          <div className="mb-6 p-4 bg-green/10 border-2 border-green/20 rounded-2xl text-center bounce-in">
            <div className="text-4xl mb-2 animate-bounce-slow">🎉</div>
            <p className="font-bold text-green">Action completed successfully!</p>
            <p className="text-sm text-green/80">Your farm is looking better!</p>
          </div>
        )}

        {/* Action Loading */}
        {actionInProgress && (
          <div className="mb-6 p-4 bg-primary/10 border-2 border-primary/20 rounded-2xl text-center">
            <div className="text-4xl mb-2 animate-spin-slow">⚙️</div>
            <p className="font-bold text-primary">Working on it...</p>
            <div className="mt-2 w-full bg-muted rounded-full h-2">
              <div className="bg-primary h-2 rounded-full animate-pulse" style={{width: "60%"}}></div>
            </div>
          </div>
        )}

        {/* Actions */}
        {!showSuccess && !actionInProgress && (
          <div className="space-y-3">
            {content.actions.map((action, index) => (
              <FarmButton
                key={action.name}
                variant={action.color as any}
                size="md"
                className="w-full justify-start text-left p-4 h-auto"
                onClick={() => handleAction(action.name)}
              >
                <div className="flex items-start gap-3">
                  <span className="text-2xl">{action.emoji}</span>
                  <div>
                    <div className="font-bold">{action.name}</div>
                    <div className="text-sm opacity-80 font-normal">
                      {action.description}
                    </div>
                  </div>
                  {action.name === "Plant Seeds" && (
                    <div className="ml-auto flex items-center text-xs text-green">
                      <Play size={12} className="mr-1" /> Watch Video
                    </div>
                  )}
                </div>
              </FarmButton>
            ))}
          </div>
        )}

        {/* Fun tip */}
        {!showSuccess && !actionInProgress && (
          <div className="mt-6 p-3 bg-yellow/10 rounded-xl text-center">
            <span className="text-xs font-comic text-muted-foreground">
              💡 Each action helps your farm grow stronger and healthier!
            </span>
          </div>
        )}
      </FarmCard>
    </div>
  );
};
